function f_post {
  if [[ $LXC == "1" ]]; then
    return
  fi

  echo "[$SCRIPT_COUNT] Post processing"

  $APT install --no-install-recommends fwupd secureboot-db

  if [[ $VERBOSE == "Y" ]]; then
    update-grub
    ((SCRIPT_COUNT++))
  else
    update-grub 2>/dev/null
  fi

  if grep -q superusers /etc/grub.d/40_custom; then
    echo "grub password already set"
    update-grub
    else
    echo 'set superusers="chargepoint"' >> /etc/grub.d/40_custom
    echo 'password_pbkdf2 chargepoint grub.pbkdf2.sha512.10000.18D48D2EB58B2ADF8DCDF4CBFDE2B1D11DC2F8E8F5D1AF233DC91061E2EF17FEBA9BE2B733E15DD5B6E90E0949200276D95948A68CF3D8C8F80278B38F39E943.A246413212521A5A41DEA9C9B4118A24A80399A4FC5EB1451DB86809DC1E84B583B4394A2F60BE01B1BB0A02B74062FFB724F50A14AB5EAE32E600E0010C4E55' >> /etc/grub.d/40_custom
    sed '/\$os/ s/\(menuentry .*\) ${CLASS}/\1 --unrestricted ${CLASS}/' /etc/grub.d/10_linux
    update-grub
    fi

    # Correct the form of default kernel command line in GRUB
  if grep -q '^\s*GRUB_CMDLINE_LINUX=.*audit=.*"'  '/etc/default/grub' ; then
         # modify the GRUB command-line if an audit= arg already exists
         sed -i "s/\(^\s*GRUB_CMDLINE_LINUX=\".*\)audit=[^[:space:]]\+\(.*\"\)/\1audit=1\2/"  '/etc/default/grub'
  # Add to already existing GRUB_CMDLINE_LINUX parameters
  elif grep -q '^\s*GRUB_CMDLINE_LINUX='  '/etc/default/grub' ; then
         # no audit=arg is present, append it
         sed -i "s/\(^\s*GRUB_CMDLINE_LINUX=\".*\)\"/\1 audit=1\"/"  '/etc/default/grub'
  # Add GRUB_CMDLINE_LINUX parameters line
  else
         echo "GRUB_CMDLINE_LINUX=\"audit=1\"" >> '/etc/default/grub'
  fi

  # Correct the form of default kernel command line in GRUB
  if grep -q '^\s*GRUB_CMDLINE_LINUX=.*audit_backlog_limit=.*"'  '/etc/default/grub' ; then
         # modify the GRUB command-line if an audit_backlog_limit= arg already exists
         sed -i "s/\(^\s*GRUB_CMDLINE_LINUX=\".*\)audit_backlog_limit=[^[:space:]]\+\(.*\"\)/\1audit_backlog_limit=8192\2/"  '/etc/default/grub'
  # Add to already existing GRUB_CMDLINE_LINUX parameters
  elif grep -q '^\s*GRUB_CMDLINE_LINUX='  '/etc/default/grub' ; then
         # no audit_backlog_limit=arg is present, append it
         sed -i "s/\(^\s*GRUB_CMDLINE_LINUX=\".*\)\"/\1 audit_backlog_limit=8192\"/"  '/etc/default/grub'
  # Add GRUB_CMDLINE_LINUX parameters line
  else
         echo "GRUB_CMDLINE_LINUX=\"audit_backlog_limit=8192\"" >> '/etc/default/grub'
  fi

  find /boot/ -type f -name '*.cfg' -exec chmod 0400 {} \;
}
